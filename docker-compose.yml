version: "3"
services:
    nginx:
        image: nginx:${NGINX_VERSION}
        ports:
            - "${NGINX_PORT}:80"
        restart: always
        networks:
            - web-network

        volumes:
            - ${WWW_ROOT_LOCAL}:${WWW_ROOT_CONTAINER}
            - ./nginx/conf/sites:/etc/nginx/conf.d
        depends_on:
            - php
    php:
        build:
            context: ./php
            dockerfile: Dockerfile-yii
            args:
                - PHP_VERSION=${PHP_VERSION}
        restart: always
        networks:
            - web-network
        volumes:
            - ${WWW_ROOT_LOCAL}:${WWW_ROOT_CONTAINER}
            - ${DATA_DIR}/logs/php:/var/log/php-fpm
            - ./php/php.ini:/usr/local/etc/php/php.ini
        ports:
            - "${PHP_FPM_PORT}:9000"
        depends_on:
            - mysql
    mysql:
        build:
            context: ./mysql
            args:
                - MYSQL_VERSION=${MYSQL_VERSION}
        restart: always
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            - ${DATA_DIR}/mysql:/var/lib/mysql
            - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
        ports:
            - "${MYSQL_PORT}:3306"
        networks:
            - web-network

    redis:
        build:
            context: ./redis
            args:
                - REDIS_VERSION=${REDIS_VERSION}
        restart: always
        volumes:
            - ${DATA_DIR}/redis:/data
        ports:
            - "${REDIS_PORT}:6379"
        networks:
            - web-network

networks:
    web-network:
        driver: bridge
